--- src/com/iota/iri/network/UDPReceiver.java
+++ src/com/iota/iri/network/UDPReceiver.java
@@ -67,34 +67,36 @@
 
             while (!shuttingDown.get()) {
 
-                if (((processed + dropped) % 50000 == 0)) {
-                    log.info("Receiver thread processed/dropped ratio: "+processed+"/"+dropped);
-                    processed = 0;
-                    dropped = 0;
-                }
+                if (socket != null && socket.isClosed()) {
+                    if (((processed + dropped) % 50000 == 0)) {
+                        log.info("Receiver thread processed/dropped ratio: "+processed+"/"+dropped);
+                        processed = 0;
+                        dropped = 0;
+                    }
 
-                try {
-                    socket.receive(receivingPacket);
+                    try {
+                        socket.receive(receivingPacket);
 
-                    if (receivingPacket.getLength() == TRANSACTION_PACKET_SIZE) {
+                        if (receivingPacket.getLength() == TRANSACTION_PACKET_SIZE) {
 
-                        byte[] bytes = Arrays.copyOf(receivingPacket.getData(), receivingPacket.getLength());
-                        SocketAddress address = receivingPacket.getSocketAddress();
+                            byte[] bytes = Arrays.copyOf(receivingPacket.getData(), receivingPacket.getLength());
+                            SocketAddress address = receivingPacket.getSocketAddress();
 
-                        processor.submit(() -> node.preProcessReceivedData(bytes, address, "udp"));
-                        processed++;
+                            processor.submit(() -> node.preProcessReceivedData(bytes, address, "udp"));
+                            processed++;
 
-                        Thread.yield();
+                            Thread.yield();
 
-                    } else {
-                        receivingPacket.setLength(TRANSACTION_PACKET_SIZE);
-                    }
-                } catch (final RejectedExecutionException e) {
-                    //no free thread, packet dropped
-                    dropped++;
+                        } else {
+                            receivingPacket.setLength(TRANSACTION_PACKET_SIZE);
+                        }
+                    } catch (final RejectedExecutionException e) {
+                        //no free thread, packet dropped
+                        dropped++;
 
-                } catch (final Exception e) {
-                    log.error("Receiver Thread Exception:", e);
+                    } catch (final Exception e) {
+                        if (!shuttingDown.get()) log.error("Receiver Thread Exception:", e);
+                    }
                 }
             }
             log.info("Shutting down spawning Receiver Thread");
