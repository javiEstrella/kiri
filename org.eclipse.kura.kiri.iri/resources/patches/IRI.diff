--- src/com/iota/iri/IRI.java
+++ src/com/iota/iri/IRI.java
@@ -28,6 +28,10 @@
     public static Iota iota;
     public static API api;
     public static IXI ixi;
+    // TODO kiri
+    public static boolean initializedIOTA = false;
+    public static boolean initializedAPI = false;
+    public static boolean initializedIXI = false;
     public static Configuration configuration;
     private static final String TESTNET_FLAG_REQUIRED = "--testnet flag must be turned on to use ";
 
@@ -38,7 +42,6 @@
         iota = new Iota(configuration);
         ixi = new IXI(iota);
         api = new API(iota, ixi);
-        shutdownHook();
 
         if (configuration.booling(DefaultConfSettings.DEBUG)) {
             log.info("You have set the debug flag. To enable debug output, you need to uncomment the DEBUG appender in the source tree at iri/src/main/resources/logback.xml and re-package iri.jar");
@@ -67,15 +70,34 @@
             }
         }
 
+        // TODO KIRI
         try {
+            log.info("iota.init() ...");
             iota.init();
+            initializedIOTA = true;
+            log.info("iota.init() done");
+
+            log.info("api.init() ...");
             api.init();
-            ixi.init(configuration.string(Configuration.DefaultConfSettings.IXI_DIR));
+            initializedAPI = true;
+            log.info("api.init() done");
+
+            log.info("ixi.init(...) ...");
+            log.info("IXI service is not enabled");
+            // ixi.init(configuration.string(Configuration.DefaultConfSettings.IXI_DIR));
+            initializedIXI= true;
+            log.info("ixi.init(...) done");
+
+            log.info("IOTA Node initialised correctly.");
         } catch (final Exception e) {
             log.error("Exception during IOTA node initialisation: ", e);
-            System.exit(-1);
+            stop();
         }
-        log.info("IOTA Node initialised correctly.");
+    }
+
+    // TODO kiri
+    public static boolean isInitialized() {
+        return initializedAPI && initializedIOTA && initializedIXI;
     }
 
     public static void validateParams(final Configuration configuration, final String[] args) throws IOException {
@@ -326,4 +348,29 @@
             }
         }, "Shutdown Hook"));
     }
+
+    // TODO kiri
+    public static void stop() {
+        if (initializedAPI || initializedIOTA || initializedIXI) {
+            log.info("Shutting down IOTA node, please hold tight...");
+            try {
+                if (initializedIXI) {
+                    initializedIXI= false;
+                    // ixi.shutDown();
+                }
+
+                if (initializedAPI) {
+                    initializedAPI = false;
+                    api.shutDown();
+                }
+
+                if (initializedIOTA) {
+                    initializedIOTA = false;
+                    iota.shutdown();
+                }
+            } catch (final Exception e) {
+                log.error("Exception occurred shutting down IOTA node: ", e);
+            }
+        }
+    }
 }
